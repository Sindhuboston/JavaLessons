<?xml version="1.0" encoding="UTF-8"?>

Generic = means the type of data. eg: Integer, String etc.

Arrays = size is fixed and no new element can be added to this array once defined.

INTERFACES:
===================================================================================================================================================
collection = does not use/support index to arrange elements in the collection.   elements can NOT be inserted or removed within the list.
				iterator is used to fetch the value from the Collections
				used to create a list of OBJECTS. 
				it uses the class object to make a collection reference:
					Collections <Integer> cln = new ArrayList();
				
List = uses index to arrange elements in the list.
			 adds Objects to a list.   
			*allows DUPLICATE element values. *** with unique index# -->> unlike MAP
			*follows SEQUENCE to search/print elements in the list.
			 uses class object to make a reference to List:
				List <clsName> ls = new ArrayList<>();
				
Set + HashSet = *allows only UNIQUE element values and adding duplicate values would create errors.
				*follows RANDOM to fetch/print element values. Each print can give a different sequence of elements in the set.  
			 	uses class object to make a reference to Set:
			 		Set <clsName> st = HashSet<>();

Set + TreeSet =  = *allows only UNIQUE element values and adding duplicate values would create errors.
				 	* follows SEQUENCE to search /print the set element values.
				 		Set <clsName> tr = new TreeSet();

Map <Key, Value> = eg: Map<username, xyp> m = new HashMap<>();




						
	Note: package= java.util
=======================================================================================
=======================================================================================
	
					iterable		
					============	
					
					collection	- does not work on index: and element can be inserted or removed to adjust the collection.
					============	
	
	List			Queue				Set
	============	============		============
	ArrayList		PriorityQueue		HashSet
										LinkedHashSet
	Vector				
		Stack							SortedSet
										============
										TreeSet
	LinkedArray		DeQue		
					============
					ArrayDeque		
					


Extends								Implements		
collection extends iterable			ArrayList implements List		
List extends collection				Vector implements List		
Queue extends collection			LinkedArray implements List		
Set extends collection				PriorityQueue implements List		
Stack extends Vector				ArrayDeque implements Deque		
Deque extends Queue					TreeSet implements SortedSet		
SortedSet extends Set				HashSet implements Set		
									LinkedHashSet implements Set		
	